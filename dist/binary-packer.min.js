!function(a,b,c,d){if("function"==typeof define&&define.amd)define(b,c,d);else if("object"==typeof exports&&exports){for(var e=0,f=c.length;f>e;++e){var g=c[e];"string"==typeof g&&(g=g.replace(/([A-Z]+)/g,function(a){return"-"+a.toLowerCase()}).replace(/^-/,""),c[e]=require(g))}var h=d.apply(a,c);for(var i in h)exports[i]=h[i]}else{for(var e=0,f=c.length;f>e;++e){var g=c[e];if("string"==typeof g){if(!(g in a))throw new Error('"'+b+'" dependent on non exited module "'+g+'"!');c[e]=a[g]}}a[b]=d.apply(a,c)}}(new Function("return this")(),"binary-packer",[],function(a){function b(a){this._dataTypes=[],this._dataTypesIndex={},b.init(this,a)}var c=function(){var a={},b=Object.prototype.toString,c=Array.prototype.slice;a.isUndefined=function(a){return void 0===a},a.isObject=function(a){return a===Object(a)},a.isSimpleObject=function(a){return a&&{}.constructor===a.constructor},a.isNull=function(a){return null===a};for(var d=["Function","String","Number","Date","RegExp","Array"],e=0,f=d.length;f>e;++e)!function(c){a["is"+c]=function(a){return b.call(a)==="[object "+c+"]"}}(d[e]);return a.toArray=function(a){return c.call(a)},a.extend=function(a){for(var b=c.call(arguments,1),d=0,e=b.length;e>d;++d){var f=b[d];if(f)for(var g in f)a[g]=f[g]}return a},a.clone=function(b){return a.isObject(b)?a.isArray(b)?b.slice():a.extend({},b):b},a.last=function(a){return a[a.length-1]},a.isEmpty=function(b){if(null==b)return!0;if(a.isArray(b)||a.isString(b))return 0===b.length;for(var c in b)if(b.hasOwnProperty(c))return!1;return!0},a.each=function(a,b,c){if(null!=a){var d=Array.prototype.forEach;if(d&&a.forEach===d)a.forEach(b,c);else if(a.length===+a.length){for(var e=0,f=a.length;f>e;++e)if(b.call(c,a[e],e,a)==={})return}else for(var g in a)if(a.hasOwnProperty(g)&&b.call(c,a[g],g,a)==={})return}},a}();c.extend(b,{init:function(a,b){a.setDataTypes(b)}}),c.extend(Transport_Packer.prototype,{getDataTypes:function(){return this._dataTypes},setDataTypes:function(a){return this._dataTypes=[],this.addDataTypes(a)},addDataTypes:function(a){for(var b=0,c=a.length;c>b;++b)this.addDataType(a[b]);return this},addDataType:function(a){if(!c.isString(a.name))throw new Error("Data type must have a name!");if(!c.isFunction(a.condition))throw new Error('Data type "'+a.name+'" must  have a condition logic');if(!c.isFunction(a.pack))throw new Error('Data type "'+a.name+'" must have a pack method!');if(!c.isFunction(a.unpack))throw new Error('Data type "'+a.name+'" must have an unpack method!');var b=this._dataTypes.push(a)-1;return this._dataTypesIndex[a.name]=b,this},getDataType:function(a){if(!this.hasDataType(a))throw new Error('Data type "'+a+'" does not exists!');return this._dataTypes[this._dataTypesIndex[a]]},hasDataType:function(a){return a in this._dataTypesIndex},removeDataType:function(a){if(!this.hasDataType(a))throw new Error('Data type "'+a+'" does not exists!');var b=this._dataTypesIndex[a];return this._dataTypes.splice(b,1),delete this._dataTypesIndex[a],this},findDataTypeForData:function(a){for(var b=this._dataTypes,c=0,d=b.length;d>c;++c){var e=b[c];if(e.condition.call(this,a))return e}throw new Error("Data type does not found for specified data!");var f,e},getDataTypeCode:function(a){if(c.isString(a.name)&&(a=a.name),!this.hasDataType(a))throw new Error('Data type "'+a+'" does not exists!');return this._dataTypesIndex[a]},getDataTypeByCode:function(a){if(!(a in this._dataTypes))throw new Error('Data type with code "'+a+'" does not exists!');return this._dataTypes[a]},pack:function(a){return this.doPack(a)[0]},unpack:function(a){return this.doUnpack(a)[0]},doPack:function(a){var b=this.findDataTypeForData(a),c=this.getDataTypeCode(b),d=Binary.create(1).write("UInt8",c),e=b.pack.call(this,a),f=Binary.concat(d,e);return[f,f.length]},doUnpack:function(a){var b=a.read("UInt8"),c=this.getDataTypeByCode(b),d=c.unpack.call(this,a.slice(1));return[d[0],d[1]+1]}});var d={name:"array",condition:function(a){return"[object Array]"===Object.prototype.toString.call(a)},pack:function(a){for(var b=[],c=0,d=a.length;d>c;++c)b.push(this.pack(a[c]));return b.push(new Buffer("\x00","utf8")),Buffer.concat(b)},unpack:function(a){for(var b,c,d,e=0,f=[];"\x00"!==a.toString("utf8",e,e+1);)b=this.unpack(a.slice(e)),c=b[0],d=b[1],e+=d,f.push(c);return e+=1,[f,e]}},e={name:"boolean",condition:function(a){return"[object Boolean]"===Object.prototype.toString.call(a)},pack:function(a){var b=new Buffer(1);return b.writeUInt8(a?1:0,0),b},unpack:function(a){return[!!a.readUInt8(0),1]}},f={name:"buffer",condition:function(a){return a instanceof Buffer},pack:function(a){var b=new Buffer(4);return b.writeUInt32LE(a.length,0),Buffer.concat([b,a])},unpack:function(a){var b=a.readUInt32LE(0);return[a.slice(4,4+b),4+b]}},g={name:"null",condition:function(a){return null===a},pack:function(){return new Buffer([])},unpack:function(){return[null,0]}},h={name:"number",condition:function(a){return"[object Number]"===Object.prototype.toString.call(a)},pack:function(a){var b=new Buffer(8);return b.writeDoubleLE(a,0),b},unpack:function(a){return[a.readDoubleLE(0),8]}},i={name:"simple_object",condition:function(a){return{}.constructor===a.constructor},pack:function(a){var b=[];for(var c in a)b.push(this.pack(c)),b.push(this.pack(a[c]));return b.push(new Buffer("\x00","utf8")),Buffer.concat(b)},unpack:function(a){for(var b,c,d,e,f,g,h=0,i={};"\x00"!==a.toString("utf8",h,h+1);)b=this.unpack(a.slice(h)),c=b[0],d=b[1],h+=d,e=this.unpack(a.slice(h)),f=e[0],g=e[1],h+=g,i[c]=f;return h+=1,[i,h]}},j={name:"string",condition:function(a){return"[object String]"===Object.prototype.toString.call(a)},pack:function(a){var b=Buffer.byteLength(a),c=new Buffer(4+b);return c.writeInt32LE(b,0),c.write(a,4,b,"utf8"),c},unpack:function(a){var b=a.readUInt32LE(0);return[a.toString("utf8",4,4+b),4+b]}},k={name:"undefined",condition:function(a){return"undefined"==typeof a},pack:function(){return new Buffer([])},unpack:function(){return[a,0]}};return{Packer:b,DataType:{Undefined:k,Null:g,Boolean:e,Number:h,String:j,Array:d,SimpleObject:i,Buffer:f}}});
//# sourceMappingURL=binary-packer.min.map